name: Deploy Frontend to CloudFront

on:
  push:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'frontend/**'

env:
  AWS_REGION: us-east-1
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test -- --watchAll=false --passWithNoTests

    - name: Build application
      run: npm run build
      env:
        REACT_APP_API_URL: https://aj35pun5yg.execute-api.us-east-1.amazonaws.com/dev
        REACT_APP_DEBUG: false

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build application
      run: npm run build
      working-directory: ./frontend
      env:
        REACT_APP_API_URL: https://aj35pun5yg.execute-api.us-east-1.amazonaws.com/dev
        REACT_APP_DEBUG: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to S3
      run: |
        aws s3 sync ./frontend/build/ s3://${{ env.S3_BUCKET_NAME }} --delete
        echo "Files uploaded to S3 successfully"

    - name: Create CloudFront invalidation
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
        echo "CloudFront invalidation created"

    - name: Wait for CloudFront deployment
      run: |
        echo "Waiting for CloudFront deployment to complete..."
        sleep 30
        echo "Deployment should be complete. Check your CloudFront URL."

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ Frontend deployed successfully!"
          echo "üåê Your site should be available at your CloudFront URL"
        else
          echo "‚ùå Deployment failed!"
        fi 